cmake_minimum_required(VERSION 2.8)

project(c-plusplus-study)
enable_language(C CXX ASM)

include(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
CHECK_CXX_COMPILER_FLAG("-std=c++0x" COMPILER_SUPPORTS_CXX0X)
if(COMPILER_SUPPORTS_CXX11)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
    message("Have set c++11.")
elseif(COMPILER_SUPPORTS_CXX0X)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
    message("Have set c++0x.")
else()
    message(STATUS "The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.")
endif()

#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -msse4")
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -mavx")

foreach(val ${CMAKE_CXX_FLAGS})
    message(${val})
endforeach()

#if(COMPILER_SUPPORTS_CXX0X)
#    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
#    message("Have set c++0x.")
#endif()

#set(BOOST_INCLUDE_DIR /media/xzgz/Ubuntu/Ubuntu/Library/boost_1_69_0/include)
#set(BOOST_LIBRARY_DIR /media/xzgz/Ubuntu/Ubuntu/Library/boost_1_69_0/lib)
#include_directories(${BOOST_INCLUDE_DIR})
#link_directories(${BOOST_LIBRARY_DIR})
#file(GLOB boost_static_libs ${BOOST_LIBRARY_DIR}/*.a*)
#file(GLOB boost_shared_libs ${BOOST_LIBRARY_DIR}/*.so.*)
##set(Boost_LINKER_LIBS ${boost_static_libs})
#set(Boost_LINKER_LIBS ${boost_shared_libs})

find_package(Threads REQUIRED)
message("Threads libs:")
foreach(val ${CMAKE_THREAD_LIBS_INIT})
    message(${val})
endforeach()
message("\n")
list(APPEND PROJECT_LINK_LIBS ${CMAKE_THREAD_LIBS_INIT})
#list(APPEND PROJECT_LINK_LIBS -lrt)

include_directories(${PROJECT_SOURCE_DIR})
include_directories(${PROJECT_SOURCE_DIR}/include)

add_subdirectory(utils)
list(APPEND PROJECT_LINK_LIBS c_plus_utils)

#message("\n\nboost_static_libs:")
#foreach(val ${boost_static_libs})
#    message(${val})
#endforeach()
#message("\n\nboost_shared_libs:")
#foreach(val ${boost_shared_libs})
#    message(${val})
#endforeach()
#message("Boost_LINKER_LIBS:")
#foreach(val ${Boost_LINKER_LIBS})
#    message(${val})
#endforeach()

#add_subdirectory(boost-ptr)
#add_subdirectory(boost-thread)

#add_subdirectory(cplus-grammar)
#add_subdirectory(array)
#add_subdirectory(previous-code)
#add_subdirectory(stack)
#add_subdirectory(list)
add_subdirectory(classic-problem)
#add_subdirectory(tree)
#add_subdirectory(multi-thread)
#add_subdirectory(cplus-grammar2)
#add_subdirectory(sse-study)
#add_subdirectory(sword-to-offer)
add_subdirectory(leetcode)
add_subdirectory(smart-pointer)
add_subdirectory(iostream)
add_subdirectory(sort)
#add_subdirectory(binary-tree)
#add_subdirectory(string)
add_subdirectory(cpp-primer-plus)
add_subdirectory(get-cpu-info)
